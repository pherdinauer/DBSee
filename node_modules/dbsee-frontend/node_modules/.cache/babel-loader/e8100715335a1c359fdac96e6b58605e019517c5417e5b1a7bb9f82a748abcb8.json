{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\desiderato\\\\Documents\\\\DBSee\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport Layout from './components/Layout';\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport TableDetailPage from './pages/TableDetailPage';\nimport { authAPI } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const hasToken = authAPI.isAuthenticated();\n  const {\n    data: user,\n    isLoading,\n    error\n  } = useQuery('currentUser', authAPI.getCurrentUser, {\n    enabled: hasToken,\n    retry: false\n  });\n\n  // Show loading only when we have a token but are still fetching user data\n  if (hasToken && isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If there's an error fetching user data but we have a token, still consider authenticated\n  // This prevents users from being stuck at login due to API issues\n  const isAuthenticated = hasToken && (user || error);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(DashboardPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/table/:tableName\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(TableDetailPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VCwJNGs/ycgRrPkFeSSfdjG9Q3s=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Routes","Route","Navigate","useQuery","Layout","LoginPage","DashboardPage","TableDetailPage","authAPI","jsxDEV","_jsxDEV","App","_s","hasToken","isAuthenticated","data","user","isLoading","error","getCurrentUser","enabled","retry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/desiderato/Documents/DBSee/frontend/src/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport { useQuery } from 'react-query';\r\nimport Layout from './components/Layout';\r\nimport LoginPage from './pages/LoginPage';\r\nimport DashboardPage from './pages/DashboardPage';\r\nimport TableDetailPage from './pages/TableDetailPage';\r\nimport { authAPI } from './services/api';\r\n\r\nfunction App() {\r\n  const hasToken = authAPI.isAuthenticated();\r\n  \r\n  const { data: user, isLoading, error } = useQuery(\r\n    'currentUser',\r\n    authAPI.getCurrentUser,\r\n    {\r\n      enabled: hasToken,\r\n      retry: false,\r\n    }\r\n  );\r\n\r\n  // Show loading only when we have a token but are still fetching user data\r\n  if (hasToken && isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If there's an error fetching user data but we have a token, still consider authenticated\r\n  // This prevents users from being stuck at login due to API issues\r\n  const isAuthenticated = hasToken && (user || error);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route\r\n          path=\"/login\"\r\n          element={\r\n            isAuthenticated ? <Navigate to=\"/\" replace /> : <LoginPage />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            isAuthenticated ? (\r\n              <Layout>\r\n                <DashboardPage />\r\n              </Layout>\r\n            ) : (\r\n              <Navigate to=\"/login\" replace />\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/table/:tableName\"\r\n          element={\r\n            isAuthenticated ? (\r\n              <Layout>\r\n                <TableDetailPage />\r\n              </Layout>\r\n            ) : (\r\n              <Navigate to=\"/login\" replace />\r\n            )\r\n          }\r\n        />\r\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}